#*****************************************************************************************
# Vivado (TM) v2024.1.2 (64-bit)
#
# gen_prj.tcl: Tcl script for re-creating project 'psoc'
#
# Generated by Vivado on Fri Aug 22 13:01:35 CEST 2025
# IP Build 5164407 on Fri Sep  6 08:18:11 MDT 2024
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (gen_prj.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/nq5949/Dokumente/psoc/psoc-soc/build/psoc/psoc.srcs/utils_1/imports/synth_1/fpga_soc_top.dcp"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/audio/clock_generator.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/audio/i2s_master.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/audio/i2s_wb_regfile.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/io/io_subsystem.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/io/io_wb_regfile.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/fpga/iobank0.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/fpga/iobank1.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/io/iomux.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neosd/rtl/neosd_clken.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/audio/psoc_audio.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/audio/psoc_dac_fpga.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/reset_logic.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/audio/sfifo.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/fpga/sfifo_mem.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/soc_top.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/wb_xbar.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neosd/rtl/neosd_clk.sv"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neosd/rtl/neosd_cmd_fsm.sv"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neosd/rtl/neosd_cmd_reg.sv"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neosd/rtl/neosd_dat_block.sv"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neosd/rtl/neosd_dat_crc.sv"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neosd/rtl/neosd_dat_fsm.sv"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neosd/rtl/neosd_dat_reg.sv"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neosd/rtl/neosd_top.sv"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_package.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_application_image.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/psoc-xip-bootloader/bootloader_tiny/neorv32_bootloader_image.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_boot_rom.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_bus.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cache.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cfs.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_clint.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_clockgate.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_fifo.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_decompressor.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_control.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_regfile.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_cp_shifter.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_cp_muldiv.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_cp_bitmanip.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_cp_fpu.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_cp_cfu.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_cp_cond.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_cp_crypto.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_alu.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_lsu.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_pmp.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu_icc.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_cpu.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_crc.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_debug_auth.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_debug_dm.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_debug_dtm.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_dma.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_dmem.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_gpio.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_gptmr.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_imem.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_neoled.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_onewire.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_pwm.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_sdi.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_slink.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_spi.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_sys.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_sysinfo.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_xip.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_xbus.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_wdt.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_uart.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_twi.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_twd.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_trng.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/ext/neorv32/rtl/core/neorv32_top.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/neorv32_wrap.vhd"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/fpga/fpga_soc_top.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/fpga/fpga_standalone_top.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/init/sin_lut_90x24.mem"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/fpga/led_blink.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/hdl/audio/sine_generator.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/script/vivado/constr_standalone.xdc"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/script/vivado/constr_soc.xdc"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/sim/tb_clock_generator.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/sim/tb_sine_generator.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/sim/tb_i2s_master.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/sim/tb_fpga_soc_top.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/sim/tb_fpga_soc_top_behav.wcfg"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/sim/tb_fpga_standalone_top.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/sim/tb_psoc_dac.v"
#    "/home/nq5949/Dokumente/psoc/psoc-soc/src/sim/tb_psoc_dac_behav.wcfg"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../../src/hdl/audio/clock_generator.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/audio/i2s_master.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/audio/i2s_wb_regfile.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/io/io_subsystem.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/io/io_wb_regfile.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/fpga/iobank0.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/fpga/iobank1.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/io/iomux.v"]"\
 "[file normalize "$origin_dir/../../ext/neosd/rtl/neosd_clken.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/audio/psoc_audio.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/audio/psoc_dac_fpga.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/reset_logic.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/audio/sfifo.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/fpga/sfifo_mem.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/soc_top.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/wb_xbar.v"]"\
 "[file normalize "$origin_dir/../../ext/neosd/rtl/neosd_clk.sv"]"\
 "[file normalize "$origin_dir/../../ext/neosd/rtl/neosd_cmd_fsm.sv"]"\
 "[file normalize "$origin_dir/../../ext/neosd/rtl/neosd_cmd_reg.sv"]"\
 "[file normalize "$origin_dir/../../ext/neosd/rtl/neosd_dat_block.sv"]"\
 "[file normalize "$origin_dir/../../ext/neosd/rtl/neosd_dat_crc.sv"]"\
 "[file normalize "$origin_dir/../../ext/neosd/rtl/neosd_dat_fsm.sv"]"\
 "[file normalize "$origin_dir/../../ext/neosd/rtl/neosd_dat_reg.sv"]"\
 "[file normalize "$origin_dir/../../ext/neosd/rtl/neosd_top.sv"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_package.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_application_image.vhd"]"\
 "[file normalize "$origin_dir/../../ext/psoc-xip-bootloader/bootloader_tiny/neorv32_bootloader_image.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_boot_rom.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_bus.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cache.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cfs.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_clint.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_clockgate.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_fifo.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_decompressor.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_control.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_regfile.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_shifter.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_muldiv.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_bitmanip.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_fpu.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_cfu.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_cond.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_crypto.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_alu.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_lsu.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_pmp.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_icc.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_crc.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_debug_auth.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_debug_dm.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_debug_dtm.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_dma.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_dmem.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_gpio.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_gptmr.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_imem.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_neoled.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_onewire.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_pwm.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_sdi.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_slink.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_spi.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_sys.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_sysinfo.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_xip.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_xbus.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_wdt.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_uart.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_twi.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_twd.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_trng.vhd"]"\
 "[file normalize "$origin_dir/../../ext/neorv32/rtl/core/neorv32_top.vhd"]"\
 "[file normalize "$origin_dir/../../src/hdl/neorv32_wrap.vhd"]"\
 "[file normalize "$origin_dir/../../src/hdl/fpga/fpga_soc_top.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/fpga/fpga_standalone_top.v"]"\
 "[file normalize "$origin_dir/../../src/init/sin_lut_90x24.mem"]"\
 "[file normalize "$origin_dir/../../src/hdl/fpga/led_blink.v"]"\
 "[file normalize "$origin_dir/../../src/hdl/audio/sine_generator.v"]"\
 "[file normalize "$origin_dir/../../script/vivado/constr_standalone.xdc"]"\
 "[file normalize "$origin_dir/../../script/vivado/constr_soc.xdc"]"\
 "[file normalize "$origin_dir/../../src/sim/tb_clock_generator.v"]"\
 "[file normalize "$origin_dir/../../src/sim/tb_sine_generator.v"]"\
 "[file normalize "$origin_dir/../../src/sim/tb_i2s_master.v"]"\
 "[file normalize "$origin_dir/../../src/sim/tb_fpga_soc_top.v"]"\
 "[file normalize "$origin_dir/../../src/sim/tb_fpga_soc_top_behav.wcfg"]"\
 "[file normalize "$origin_dir/../../src/sim/tb_fpga_standalone_top.v"]"\
 "[file normalize "$origin_dir/../../src/sim/tb_psoc_dac.v"]"\
 "[file normalize "$origin_dir/../../src/sim/tb_psoc_dac_behav.wcfg"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "psoc"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "gen_prj.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../build/psoc"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z020clg484-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7z020clg484-1" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "169" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../../src/hdl/audio/clock_generator.v"] \
 [file normalize "${origin_dir}/../../src/hdl/audio/i2s_master.v"] \
 [file normalize "${origin_dir}/../../src/hdl/audio/i2s_wb_regfile.v"] \
 [file normalize "${origin_dir}/../../src/hdl/io/io_subsystem.v"] \
 [file normalize "${origin_dir}/../../src/hdl/io/io_wb_regfile.v"] \
 [file normalize "${origin_dir}/../../src/hdl/fpga/iobank0.v"] \
 [file normalize "${origin_dir}/../../src/hdl/fpga/iobank1.v"] \
 [file normalize "${origin_dir}/../../src/hdl/io/iomux.v"] \
 [file normalize "${origin_dir}/../../ext/neosd/rtl/neosd_clken.v"] \
 [file normalize "${origin_dir}/../../src/hdl/audio/psoc_audio.v"] \
 [file normalize "${origin_dir}/../../src/hdl/audio/psoc_dac_fpga.v"] \
 [file normalize "${origin_dir}/../../src/hdl/reset_logic.v"] \
 [file normalize "${origin_dir}/../../src/hdl/audio/sfifo.v"] \
 [file normalize "${origin_dir}/../../src/hdl/fpga/sfifo_mem.v"] \
 [file normalize "${origin_dir}/../../src/hdl/soc_top.v"] \
 [file normalize "${origin_dir}/../../src/hdl/wb_xbar.v"] \
 [file normalize "${origin_dir}/../../ext/neosd/rtl/neosd_clk.sv"] \
 [file normalize "${origin_dir}/../../ext/neosd/rtl/neosd_cmd_fsm.sv"] \
 [file normalize "${origin_dir}/../../ext/neosd/rtl/neosd_cmd_reg.sv"] \
 [file normalize "${origin_dir}/../../ext/neosd/rtl/neosd_dat_block.sv"] \
 [file normalize "${origin_dir}/../../ext/neosd/rtl/neosd_dat_crc.sv"] \
 [file normalize "${origin_dir}/../../ext/neosd/rtl/neosd_dat_fsm.sv"] \
 [file normalize "${origin_dir}/../../ext/neosd/rtl/neosd_dat_reg.sv"] \
 [file normalize "${origin_dir}/../../ext/neosd/rtl/neosd_top.sv"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_package.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_application_image.vhd"] \
 [file normalize "${origin_dir}/../../ext/psoc-xip-bootloader/bootloader_tiny/neorv32_bootloader_image.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_boot_rom.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_bus.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cache.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cfs.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_clint.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_clockgate.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_fifo.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_decompressor.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_control.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_regfile.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_cp_shifter.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_cp_muldiv.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_cp_bitmanip.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_cp_fpu.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_cp_cfu.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_cp_cond.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_cp_crypto.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_alu.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_lsu.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_pmp.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu_icc.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_cpu.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_crc.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_debug_auth.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_debug_dm.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_debug_dtm.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_dma.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_dmem.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_gpio.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_gptmr.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_imem.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_neoled.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_onewire.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_pwm.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_sdi.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_slink.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_spi.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_sys.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_sysinfo.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_xip.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_xbus.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_wdt.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_uart.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_twi.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_twd.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_trng.vhd"] \
 [file normalize "${origin_dir}/../../ext/neorv32/rtl/core/neorv32_top.vhd"] \
 [file normalize "${origin_dir}/../../src/hdl/neorv32_wrap.vhd"] \
 [file normalize "${origin_dir}/../../src/hdl/fpga/fpga_soc_top.v"] \
 [file normalize "${origin_dir}/../../src/hdl/fpga/fpga_standalone_top.v"] \
 [file normalize "${origin_dir}/../../src/init/sin_lut_90x24.mem"] \
 [file normalize "${origin_dir}/../../src/hdl/fpga/led_blink.v"] \
 [file normalize "${origin_dir}/../../src/hdl/audio/sine_generator.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../../ext/neosd/rtl/neosd_clk.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../ext/neosd/rtl/neosd_cmd_fsm.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../ext/neosd/rtl/neosd_cmd_reg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../ext/neosd/rtl/neosd_dat_block.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../ext/neosd/rtl/neosd_dat_crc.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../ext/neosd/rtl/neosd_dat_fsm.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../ext/neosd/rtl/neosd_dat_reg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../ext/neosd/rtl/neosd_top.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_package.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_application_image.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/psoc-xip-bootloader/bootloader_tiny/neorv32_bootloader_image.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_boot_rom.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_bus.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cache.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cfs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_clint.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_clockgate.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_fifo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_decompressor.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_control.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_regfile.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_shifter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_muldiv.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_bitmanip.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_fpu.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_cfu.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_cond.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_cp_crypto.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_alu.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_lsu.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_pmp.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu_icc.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_cpu.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_crc.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_debug_auth.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_debug_dm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_debug_dtm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_dma.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_dmem.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_gpio.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_gptmr.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_imem.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_neoled.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_onewire.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_pwm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_sdi.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_slink.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_spi.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_sys.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_sysinfo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_xip.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_xbus.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_wdt.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_uart.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_twi.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_twd.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_trng.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../ext/neorv32/rtl/core/neorv32_top.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "neorv32" -objects $file_obj

set file "$origin_dir/../../src/hdl/neorv32_wrap.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../src/init/sin_lut_90x24.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "fpga_soc_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7z020clg484-1" -objects $obj

# Create 'constrs_standalone' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_standalone] ""]} {
  create_fileset -constrset constrs_standalone
}

# Set 'constrs_standalone' fileset object
set obj [get_filesets constrs_standalone]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../script/vivado/constr_standalone.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../script/vivado/constr_standalone.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_standalone] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_standalone' fileset properties
set obj [get_filesets constrs_standalone]
set_property -name "target_part" -value "xc7z020clg484-1" -objects $obj

# Create 'constrs_soc' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_soc] ""]} {
  create_fileset -constrset constrs_soc
}

# Set 'constrs_soc' fileset object
set obj [get_filesets constrs_soc]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../script/vivado/constr_soc.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../script/vivado/constr_soc.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_soc] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_soc' fileset properties
set obj [get_filesets constrs_soc]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../../script/vivado/constr_soc.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7z020clg484-1" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/../../script/vivado/constr_soc.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "fpga_standalone_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1000us" -objects $obj

# Create 'clock_generator' fileset (if not found)
if {[string equal [get_filesets -quiet clock_generator] ""]} {
  create_fileset -simset clock_generator
}

# Set 'clock_generator' fileset object
set obj [get_filesets clock_generator]
set files [list \
 [file normalize "${origin_dir}/../../src/sim/tb_clock_generator.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'clock_generator' fileset file properties for remote files
# None

# Set 'clock_generator' fileset file properties for local files
# None

# Set 'clock_generator' fileset properties
set obj [get_filesets clock_generator]
set_property -name "top" -value "tb_clock_generator" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1000us" -objects $obj

# Create 'sine_generator' fileset (if not found)
if {[string equal [get_filesets -quiet sine_generator] ""]} {
  create_fileset -simset sine_generator
}

# Set 'sine_generator' fileset object
set obj [get_filesets sine_generator]
set files [list \
 [file normalize "${origin_dir}/../../src/sim/tb_sine_generator.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sine_generator' fileset file properties for remote files
# None

# Set 'sine_generator' fileset file properties for local files
# None

# Set 'sine_generator' fileset properties
set obj [get_filesets sine_generator]
set_property -name "top" -value "tb_sine_generator" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1000us" -objects $obj

# Create 'i2s_master' fileset (if not found)
if {[string equal [get_filesets -quiet i2s_master] ""]} {
  create_fileset -simset i2s_master
}

# Set 'i2s_master' fileset object
set obj [get_filesets i2s_master]
set files [list \
 [file normalize "${origin_dir}/../../src/sim/tb_i2s_master.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'i2s_master' fileset file properties for remote files
# None

# Set 'i2s_master' fileset file properties for local files
# None

# Set 'i2s_master' fileset properties
set obj [get_filesets i2s_master]
set_property -name "top" -value "tb_i2s_master" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1000us" -objects $obj

# Create 'zedboard_soc_top' fileset (if not found)
if {[string equal [get_filesets -quiet zedboard_soc_top] ""]} {
  create_fileset -simset zedboard_soc_top
}

# Set 'zedboard_soc_top' fileset object
set obj [get_filesets zedboard_soc_top]
set files [list \
 [file normalize "${origin_dir}/../../src/sim/tb_fpga_soc_top.v"] \
 [file normalize "${origin_dir}/../../src/sim/tb_fpga_soc_top_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'zedboard_soc_top' fileset file properties for remote files
# None

# Set 'zedboard_soc_top' fileset file properties for local files
# None

# Set 'zedboard_soc_top' fileset properties
set obj [get_filesets zedboard_soc_top]
set_property -name "top" -value "tb_fpga_soc_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1000us" -objects $obj

# Create 'zedboard_standalone_top' fileset (if not found)
if {[string equal [get_filesets -quiet zedboard_standalone_top] ""]} {
  create_fileset -simset zedboard_standalone_top
}

# Set 'zedboard_standalone_top' fileset object
set obj [get_filesets zedboard_standalone_top]
set files [list \
 [file normalize "${origin_dir}/../../src/sim/tb_fpga_standalone_top.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'zedboard_standalone_top' fileset file properties for remote files
# None

# Set 'zedboard_standalone_top' fileset file properties for local files
# None

# Set 'zedboard_standalone_top' fileset properties
set obj [get_filesets zedboard_standalone_top]
set_property -name "top" -value "tb_fpga_standalone_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1000us" -objects $obj

# Create 'psoc_dac' fileset (if not found)
if {[string equal [get_filesets -quiet psoc_dac] ""]} {
  create_fileset -simset psoc_dac
}

# Set 'psoc_dac' fileset object
set obj [get_filesets psoc_dac]
set files [list \
 [file normalize "${origin_dir}/../../src/sim/tb_psoc_dac.v"] \
 [file normalize "${origin_dir}/../../src/sim/tb_psoc_dac_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'psoc_dac' fileset file properties for remote files
# None

# Set 'psoc_dac' fileset file properties for local files
# None

# Set 'psoc_dac' fileset properties
set obj [get_filesets psoc_dac]
set_property -name "top" -value "tb_psoc_dac" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1000us" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z020clg484-1 -flow {Vivado Synthesis 2024} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_standalone
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2024" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "constrset" -value "constrs_standalone" -objects $obj
set_property -name "part" -value "xc7z020clg484-1" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z020clg484-1 -flow {Vivado Implementation 2022} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_standalone -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2022" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "constrset" -value "constrs_standalone" -objects $obj
set_property -name "part" -value "xc7z020clg484-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
