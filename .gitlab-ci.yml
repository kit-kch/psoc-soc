default:
  image:
    name: gitlab.itiv.kit.edu:1443/itiv/docker/itiv-rocky8:latest

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
 - fpga_behav
 - fpga_bitstream
 - asic_test
 - asic
 - upload

fpga_behav:i2s_master:
  stage: fpga_behav
  needs: []
  script:
    - make i2s_master.sim
  artifacts:
    paths:
    - out/

fpga_behav:sine_generator:
  stage: fpga_behav
  needs: []
  script:
    - make sine_generator.sim
  artifacts:
    paths:
    - out/

fpga_behav:clock_generator:
  stage: fpga_behav
  needs: []
  script:
    - make clock_generator.sim
  artifacts:
    paths:
    - out/

fpga_behav:fpga_soc_top:
  stage: fpga_behav
  needs:
   - job: "fpga_behav:i2s_master"
     artifacts: false
   - job: "fpga_behav:clock_generator"
     artifacts: false
  script:
    - make fpga_soc_top.sim
  artifacts:
    paths:
    - out/

fpga_behav:fpga_standalone_top:
  stage: fpga_behav
  needs:
   - job: "fpga_behav:i2s_master"
     artifacts: false
   - job: "fpga_behav:clock_generator"
     artifacts: false
   - job: "fpga_behav:sine_generator"
     artifacts: false
  script:
    - make fpga_standalone_top.sim
  artifacts:
    paths:
    - out/

behavs:encoder_top:
  stage: asic_test
  needs: []
  script:
    - make encoder_top.xrun
  artifacts:
    paths:
    - out/

behavs:thermometer_encoder:
  stage: asic_test
  needs: []
  script:
    - make thermometer_encoder.xrun
  artifacts:
    paths:
    - out/

syns:encoder_top:
  stage: asic_test
  needs: []
  script:
    - export USER=build && make encoder_top.genus
    - make encoder_top.xrun2
  artifacts:
    paths:
    - out/

syns:thermometer_encoder:
  stage: asic_test
  needs: []
  script:
    - export USER=build && make thermometer_encoder.genus
    - make thermometer_encoder.xrun2
  artifacts:
    paths:
    - out/

imps:encoder_top:
  stage: asic_test
  needs: []
  script:
    - export USER=build && make encoder_top.genus
    - export USER=build && make encoder_top.innovus
    - make encoder_top.xrun3
  artifacts:
    paths:
    - out/


syn:encoder_top:
  stage: asic
  needs: []
  script:
    - export USER=build && make encoder_top.genus
  artifacts:
    paths:
    - out/

syn:thermometer_encoder:
  stage: asic
  needs: []
  script:
    - export USER=build && make thermometer_encoder.genus
  artifacts:
    paths:
    - out/

imp:encoder_top:
  stage: asic
  needs: []
  script:
    - export USER=build && make encoder_top.genus
    - export USER=build && make encoder_top.innovus
  artifacts:
    paths:
    - out/

fpga_bitstream:standalone:
  stage: fpga_bitstream
  needs:
   - job: "fpga_behav:fpga_standalone_top"
     artifacts: false
  script:
    - make standalone.bit
  variables:
    LD_PRELOAD: /lib64/libudev.so.1
  artifacts:
    paths:
    - out/

fpga_bitstream:soc:
  stage: fpga_bitstream
  needs:
   - job: "fpga_behav:clock_generator"
     artifacts: false
   - job: "fpga_behav:i2s_master"
     artifacts: false
   - job: "fpga_behav:fpga_soc_top"
     artifacts: false
  script:
    - make soc.bit
  variables:
    LD_PRELOAD: /lib64/libudev.so.1
  artifacts:
    paths:
    - out/

upload:standalone:
  stage: upload
  needs:
   - job: "fpga_bitstream:standalone"
     artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Upload firmware"
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "out/standalone.bit" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/firmware/${CI_COMMIT_TAG}/standlone.bit"'

upload:soc:
  stage: upload
  needs:
   - job: "fpga_bitstream:soc"
     artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Upload firmware"
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "out/soc.bit" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/firmware/${CI_COMMIT_TAG}/soc.bit"'